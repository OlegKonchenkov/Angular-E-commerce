version: '3'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"

  rabbitmq:
    image: 'rabbitmq:3.6.6-management'
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: rabbitmq

  account:
    build: './backend/account'
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb://db/microservices

  products:
    build: './backend/products'
    ports:
      - "3001:3000"
    depends_on:
      - rabbitmq
      - db
    command: bash -c 'while !</dev/tcp/rabbitmq/5672; do sleep 3; done; npm start'
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb://db/microservices
      - MESSAGE_QUEUE=amqp://guest:guest@rabbitmq:5672
    links: 
      - rabbitmq

  notification:
    build: './backend/notification'
    ports:
      - "3005:3000"
    depends_on:
      - rabbitmq
      - db
    command: bash -c 'while !</dev/tcp/rabbitmq/5672; do sleep 3; done; npm start'
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb://db/microservices
      - MESSAGE_QUEUE=amqp://guest:guest@rabbitmq:5672
    links: 
      - rabbitmq

  shopping_cart:
    build: './backend/shopping_cart'
    ports:
      - "3004:3000"
    depends_on:
      - db
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb://db/microservices
    
  order:
    build: './backend/order'
    ports:
      - "3006:3000"
    depends_on:
      - rabbitmq
      - db
    command: bash -c 'while !</dev/tcp/rabbitmq/5672; do sleep 3; done; npm start'
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb://db/microservices
      - MESSAGE_QUEUE=amqp://guest:guest@rabbitmq:5672
    links: 
      - rabbitmq

  authentication:
    build: './backend/authentication'
    ports:
      - "3003:3000"
    depends_on:
      - db
      - account
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb://db/microservices
    links: 
      - account
  
  db:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./backend/backup:/backup

  nginx:
    image: nginx:latest
    ports:
      - "8081:8081"
    volumes:
      - ./backend/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - authentication
      - products
      - account
      - notification
      - shopping_cart
      - order